"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var page_1 = require("ui/page");
var nativescript_loading_indicator_1 = require("nativescript-loading-indicator");
var angular_1 = require("nativescript-telerik-ui/sidedrawer/angular");
var elementRegistryModule = require("nativescript-angular/element-registry");
var colorModule = require("tns-core-modules/color");
elementRegistryModule.registerElement("CardView", function () { return require("nativescript-cardview").CardView; });
var outh_1 = require("../../shared/outh/outh");
var loader = new nativescript_loading_indicator_1.LoadingIndicator();
var Color = colorModule.Color;
var landingComponents = (function () {
    function landingComponents(page, OuthService) {
        this.page = page;
        this.OuthService = OuthService;
    }
    landingComponents.prototype.ngOnInit = function () {
        this.page.actionBarHidden = true;
        var user_profile = localStorage.getItem('user_profile');
        var user_name = user_profile['name'];
        var user_profile_pic = user_profile['picture'];
        var profile_img = this.page.getViewById('profile_pic');
        profile_img.stretch = "aspectFill";
        profile_img.src = "data:image/png;base64," + user_profile_pic;
        this.email = user_profile['email'];
        this.username = user_profile['username'];
    };
    landingComponents.prototype.onMenuTapped = function (value) {
        console.log(value);
        this.drawer.closeDrawer();
    };
    return landingComponents;
}());
__decorate([
    core_1.ViewChild(angular_1.RadSideDrawerComponent),
    __metadata("design:type", angular_1.RadSideDrawerComponent)
], landingComponents.prototype, "drawerComponent", void 0);
landingComponents = __decorate([
    core_1.Component({
        selector: 'landing',
        templateUrl: './pages/landing/landing.components.html',
        styleUrls: ['pages/landing/landing.components.css'],
        providers: [outh_1.OuthService]
    }),
    __metadata("design:paramtypes", [page_1.Page, outh_1.OuthService])
], landingComponents);
exports.landingComponents = landingComponents;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZGluZy5jb21wb25lbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibGFuZGluZy5jb21wb25lbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQW1FO0FBRW5FLGdDQUE2QjtBQUc3QixpRkFBZ0U7QUFDaEUsc0VBQW9HO0FBQ3BHLDZFQUErRTtBQUMvRSxvREFBc0Q7QUFDdEQscUJBQXFCLENBQUMsZUFBZSxDQUFDLFVBQVUsRUFBRSxjQUFNLE9BQUEsT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBQUMsUUFBUSxFQUF6QyxDQUF5QyxDQUFDLENBQUM7QUFHbkcsK0NBQXFEO0FBRXJELElBQUksTUFBTSxHQUFHLElBQUksaURBQWdCLEVBQUUsQ0FBQztBQUNwQyxJQUFJLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDO0FBVTlCLElBQWEsaUJBQWlCO0lBSTVCLDJCQUFvQixJQUFTLEVBQVMsV0FBdUI7UUFBekMsU0FBSSxHQUFKLElBQUksQ0FBSztRQUFTLGdCQUFXLEdBQVgsV0FBVyxDQUFZO0lBRTdELENBQUM7SUFLSCxvQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUMsSUFBSSxDQUFDO1FBQy9CLElBQUksWUFBWSxHQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDdEQsSUFBSSxTQUFTLEdBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25DLElBQUksZ0JBQWdCLEdBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzdDLElBQUksV0FBVyxHQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzVELFdBQVcsQ0FBQyxPQUFPLEdBQUMsWUFBWSxDQUFDO1FBQ2pDLFdBQVcsQ0FBQyxHQUFHLEdBQUMsd0JBQXdCLEdBQUMsZ0JBQWdCLENBQUM7UUFDMUQsSUFBSSxDQUFDLEtBQUssR0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLFFBQVEsR0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7SUFFdkMsQ0FBQztJQUlNLHdDQUFZLEdBQW5CLFVBQW9CLEtBQVU7UUFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFDTCx3QkFBQztBQUFELENBQUMsQUE5QkQsSUE4QkM7QUFyQkU7SUFEQSxnQkFBUyxDQUFDLGdDQUFzQixDQUFDOzhCQUNULGdDQUFzQjswREFBQztBQVRyQyxpQkFBaUI7SUFSN0IsZ0JBQVMsQ0FBQztRQUNULFFBQVEsRUFBQyxTQUFTO1FBQ2xCLFdBQVcsRUFBQyx5Q0FBeUM7UUFDckQsU0FBUyxFQUFDLENBQUMsc0NBQXNDLENBQUM7UUFDbEQsU0FBUyxFQUFDLENBQUMsa0JBQVcsQ0FBQztLQUV4QixDQUFDO3FDQU15QixXQUFJLEVBQXFCLGtCQUFXO0dBSmxELGlCQUFpQixDQThCN0I7QUE5QlksOENBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LE9uSW5pdCxOZ01vZHVsZSxWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXJFeHRlbnNpb25zIH0gZnJvbSAnbmF0aXZlc2NyaXB0LWFuZ3VsYXIvcm91dGVyJztcclxuaW1wb3J0IHtQYWdlfSBmcm9tIFwidWkvcGFnZVwiO1xyXG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gXCJ1aS9pbWFnZVwiO1xyXG5pbXBvcnQgKiBhcyBJbWFnZVNvdXJjZSBmcm9tIFwiaW1hZ2Utc291cmNlXCI7XHJcbmltcG9ydCB7TG9hZGluZ0luZGljYXRvcn0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1sb2FkaW5nLWluZGljYXRvclwiO1xyXG5pbXBvcnQgeyBSYWRTaWRlRHJhd2VyQ29tcG9uZW50LCBTaWRlRHJhd2VyVHlwZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtdGVsZXJpay11aS9zaWRlZHJhd2VyL2FuZ3VsYXJcIjtcclxuaW1wb3J0ICogYXMgZWxlbWVudFJlZ2lzdHJ5TW9kdWxlIGZyb20gJ25hdGl2ZXNjcmlwdC1hbmd1bGFyL2VsZW1lbnQtcmVnaXN0cnknO1xyXG5pbXBvcnQgKiBhcyBjb2xvck1vZHVsZSBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy9jb2xvclwiO1xyXG5lbGVtZW50UmVnaXN0cnlNb2R1bGUucmVnaXN0ZXJFbGVtZW50KFwiQ2FyZFZpZXdcIiwgKCkgPT4gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC1jYXJkdmlld1wiKS5DYXJkVmlldyk7XHJcblxyXG5pbXBvcnQgeyBWaWV3IH0gZnJvbSAndWkvY29yZS92aWV3JztcclxuaW1wb3J0IHsgT3V0aFNlcnZpY2UgfSBmcm9tIFwiLi4vLi4vc2hhcmVkL291dGgvb3V0aFwiO1xyXG5cclxudmFyIGxvYWRlciA9IG5ldyBMb2FkaW5nSW5kaWNhdG9yKCk7XHJcbnZhciBDb2xvciA9IGNvbG9yTW9kdWxlLkNvbG9yO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6J2xhbmRpbmcnLFxyXG4gIHRlbXBsYXRlVXJsOicuL3BhZ2VzL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnRzLmh0bWwnLFxyXG4gIHN0eWxlVXJsczpbJ3BhZ2VzL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnRzLmNzcyddLFxyXG4gIHByb3ZpZGVyczpbT3V0aFNlcnZpY2VdXHJcblxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIGxhbmRpbmdDb21wb25lbnRzIGltcGxlbWVudHMgT25Jbml0e1xyXG4gIHByaXZhdGUgZHJhd2VyOiBTaWRlRHJhd2VyVHlwZTtcclxuICBwcml2YXRlIGVtYWlsOiBTdHJpbmc7XHJcbiAgcHJpdmF0ZSB1c2VybmFtZTpTdHJpbmc7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYWdlOlBhZ2UscHJpdmF0ZSBPdXRoU2VydmljZTpPdXRoU2VydmljZSl7XHJcblxyXG4gIH1cclxuXHJcbiAgQFZpZXdDaGlsZChSYWRTaWRlRHJhd2VyQ29tcG9uZW50KVxyXG4gICBwdWJsaWMgZHJhd2VyQ29tcG9uZW50OiBSYWRTaWRlRHJhd2VyQ29tcG9uZW50O1xyXG5cclxubmdPbkluaXQoKXtcclxuICB0aGlzLnBhZ2UuYWN0aW9uQmFySGlkZGVuPXRydWU7XHJcbiAgbGV0IHVzZXJfcHJvZmlsZT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcl9wcm9maWxlJyk7XHJcbiAgbGV0IHVzZXJfbmFtZT11c2VyX3Byb2ZpbGVbJ25hbWUnXTtcclxuICBsZXQgdXNlcl9wcm9maWxlX3BpYz11c2VyX3Byb2ZpbGVbJ3BpY3R1cmUnXTtcclxuICBsZXQgcHJvZmlsZV9pbWc9PEltYWdlPnRoaXMucGFnZS5nZXRWaWV3QnlJZCgncHJvZmlsZV9waWMnKTtcclxuICBwcm9maWxlX2ltZy5zdHJldGNoPVwiYXNwZWN0RmlsbFwiO1xyXG4gIHByb2ZpbGVfaW1nLnNyYz1cImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxcIit1c2VyX3Byb2ZpbGVfcGljO1xyXG4gIHRoaXMuZW1haWw9dXNlcl9wcm9maWxlWydlbWFpbCddO1xyXG4gIHRoaXMudXNlcm5hbWU9dXNlcl9wcm9maWxlWyd1c2VybmFtZSddO1xyXG5cclxuICB9XHJcblxyXG5cclxuXHJcbiAgcHVibGljIG9uTWVudVRhcHBlZCh2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgY29uc29sZS5sb2codmFsdWUpO1xyXG4gICAgICAgIHRoaXMuZHJhd2VyLmNsb3NlRHJhd2VyKCk7XHJcbiAgICB9XHJcbn1cclxuIl19